{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setTodoId","className","map","todo","index","id","title","completed","type","onClick","TodoFilter","searchField","setSearchField","setFilteringMethod","onChange","e","target","value","event","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","currentTodo","isUserLoaded","setIsUserLoaded","handleCloseModal","useState","user","setUser","useEffect","getUserFromServer","a","foundUser","href","email","name","App","setTodos","visibleTodos","setVisibleTodos","isTodosLoaded","setIsTodosLoaded","todoId","filteringMethod","getTodosFromServer","response","filter","toLowerCase","includes","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b48e9c2.chunk.js","sourcesContent":["import { FC } from 'react';\n// import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Prop {\n  todos: Todo[];\n  setTodoId: (id : number) => void\n}\n\nexport const TodoList: FC<Prop> = ({\n  todos,\n  setTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo, index) => {\n        const {\n          id,\n          title,\n          completed,\n        } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{index + 1}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  completed ? 'has-text-success' : 'has-text-danger'\n                }\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setTodoId(id)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { FC } from 'react';\n\ninterface Prop {\n  searchField: string;\n  setSearchField: (searchField : string) => void;\n  setFilteringMethod: (value: string) => void;\n}\n\nexport const TodoFilter: FC<Prop> = ({\n  searchField,\n  setSearchField,\n  setFilteringMethod,\n}) => {\n  const resetSearchField = () => {\n    setSearchField('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setFilteringMethod(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          className=\"input\"\n          type=\"text\"\n          value={searchField}\n          onChange={event => setSearchField(event.target.value)}\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchField\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetSearchField}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Prop {\n  currentTodo: Todo;\n  isUserLoaded: boolean;\n  setIsUserLoaded: (value: boolean) => void;\n  setTodoId: (value: number) => void;\n}\n\nexport const TodoModal: FC<Prop> = ({\n  currentTodo,\n  isUserLoaded,\n  setIsUserLoaded,\n  setTodoId: handleCloseModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    title,\n    id,\n  } = currentTodo;\n\n  useEffect(() => {\n    const getUserFromServer = async (userId: number) => {\n      const foundUser = await getUser(userId);\n\n      setUser(foundUser);\n\n      setIsUserLoaded(false);\n    };\n\n    getUserFromServer(currentTodo.userId);\n  }, [currentTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUserLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                handleCloseModal(0);\n\n                setIsUserLoaded(true);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className=\"has-text-danger\">Planned</strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n  const [isTodosLoaded, setIsTodosLoaded] = useState(true);\n  const [isUserLoaded, setIsUserLoaded] = useState(true);\n  const [todoId, setTodoId] = useState(0);\n  const [searchField, setSearchField] = useState('');\n  const [filteringMethod, setFilteringMethod] = useState('all');\n\n  useEffect(() => {\n    const getTodosFromServer = async () => {\n      const response = await getTodos();\n\n      setTodos(response);\n      setIsTodosLoaded(false);\n    };\n\n    getTodosFromServer();\n  }, []);\n\n  const findTodo = (id: number) => {\n    return todos.find(todo => todo.id === id) || todos[0];\n  };\n\n  useEffect(() => {\n    switch (filteringMethod) {\n      case 'all':\n        setVisibleTodos(todos.filter(todo => {\n          return todo.title.toLowerCase().includes(searchField.toLowerCase());\n        }));\n\n        break;\n\n      case 'completed':\n        setVisibleTodos(todos.filter(todo => {\n          return todo.completed;\n        }));\n\n        break;\n\n      case 'active':\n        setVisibleTodos(todos.filter(todo => {\n          return !todo.completed;\n        }));\n\n        break;\n\n      default:\n        break;\n    }\n  }, [filteringMethod, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchField={searchField}\n                setSearchField={setSearchField}\n                setFilteringMethod={setFilteringMethod}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isTodosLoaded\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    setTodoId={setTodoId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId !== 0\n      && (\n        <TodoModal\n          currentTodo={findTodo(todoId)}\n          isUserLoaded={isUserLoaded}\n          setIsUserLoaded={setIsUserLoaded}\n          setTodoId={setTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}